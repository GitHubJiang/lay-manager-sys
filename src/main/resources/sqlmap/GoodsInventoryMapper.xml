<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.lay.shop.pacs.dao.GoodsInventoryDao">

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" parameterType="com.lay.shop.pacs.model.GoodsInventory" 
		useGeneratedKeys="true" keyProperty="id" 
	 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        goods_inventory (
	        	company_code ,
	        	sku_code ,
	        	quantity ,
	        	create_time ,
	        	version 
	        ) VALUES (
	        	#{companyCode,javaType=String,jdbcType=VARCHAR} ,
	        	#{skuCode,javaType=String,jdbcType=VARCHAR} ,
	        	#{quantity,javaType=Integer,jdbcType=INTEGER} ,
	        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{version,javaType=java.util.Date,jdbcType=TIMESTAMP} 
	        )
	    ]]>

	</insert>
		
	<update id="update" parameterType="com.lay.shop.pacs.model.GoodsInventory">
	    <![CDATA[
	        UPDATE goods_inventory SET
		        company_code = #{companyCode,javaType=String,jdbcType=VARCHAR} ,
		        sku_code = #{skuCode,javaType=String,jdbcType=VARCHAR} ,
		        quantity = #{quantity,javaType=Integer,jdbcType=INTEGER} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        version = #{version,javaType=java.util.Date,jdbcType=TIMESTAMP} 
	        WHERE 
		        id = #{id} 
	    ]]>
	</update>
   	<delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from goods_inventory where
		        id = #{id} 
	    ]]>
    </delete> 
	    
    <delete id="deleteByIds" parameterType="list">
    
        delete from goods_inventory 
        where id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}				
		</foreach>	
  
    </delete>  

    <select id="findPageGoodsInventoryListCount" resultType="long">
        select count(*)
		from goods_inventory inv 
		inner join item_sku it 
		on inv.sku_code = it.sku_code and inv.company_code = it.company_code
    </select>
    
    <select id="findPageGoodsInventoryList" resultType="com.lay.shop.pacs.command.GoodsInvCommand">
    	select inv.id as id,it.sku_code as skuCode,inv.quantity as quantity,it.sku_name as skuName,it.remark as remark 
		from goods_inventory inv 
		inner join item_sku it 
		on inv.sku_code = it.sku_code and inv.company_code = it.company_code
    </select>
    
    <update id="updateInventoryById">
    	update goods_inventory set quantity = #{quantity}  where id = #{id}  
    </update>
    
    <select id="findInventoryByCompanyCodeAndSkuCode" resultType="com.lay.shop.pacs.command.GoodsInvCommand">
    	select inv.id as id,it.sku_code as skuCode,it.sku_name as skuName,it.bar_code as barCode,it.sku_properties as skuProperties,
    		it.supplier_sku_code as supplierSkuCode,it.img_url as imgUrl,inv.quantity as quantity,it.remark as remark  
		from goods_inventory inv 
		inner join item_sku it 
		on inv.sku_code = it.sku_code and inv.company_code = it.company_code
		where inv.sku_code = #{skuCode} and inv.company_code = #{companyCode}
    </select>
    
    <select id="findInventoryById" resultType="com.lay.shop.pacs.command.GoodsInvCommand">
    	select inv.id as id,it.sku_code as skuCode,it.sku_name as skuName,it.bar_code as barCode,it.sku_properties as skuProperties,
    		   it.supplier_sku_code as supplierSkuCode,it.img_url as imgUrl,inv.quantity as quantity,it.remark as remark 
		from goods_inventory inv 
		inner join item_sku it 
		on inv.sku_code = it.sku_code and inv.company_code = it.company_code
		where inv.id = #{id}
    </select>
</mapper>
