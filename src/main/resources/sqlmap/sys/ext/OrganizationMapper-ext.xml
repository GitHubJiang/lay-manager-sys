<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.lay.shop.modules.sys.dao.OrganizationDao">
	<resultMap id="organizationResultExt" type="com.lay.shop.modules.sys.model.Organization">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="organizationColumnsExt">
	    <![CDATA[
	        	id as id,
	        	code as code,
	        	name as name,
	        	full_name as fullName,
	        	org_type_id as orgTypeId,
	        	parent_id as parentId,
	        	remark as remark,
	        	lifecycle as lifecycle,
	        	last_modify_time as lastModifyTime
	    ]]>
	</sql>
	
	<sql id="organizationDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="code!=null">
					and code = #{code}
				</if>
	       
				<if test="name!=null">
					and name = #{name}
				</if>
	       
				<if test="fullName!=null">
					and full_name = #{fullName}
				</if>
	       
				<if test="orgTypeId!=null">
					and org_type_id = #{orgTypeId}
				</if>
	       
				<if test="parentId!=null">
					and parent_id = #{parentId}
				</if>
	       
				<if test="remark!=null">
					and remark = #{remark}
				</if>
	       
				<if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
		</where>
	</sql>
	
	<select id="findPageCountByQueryMapWithPage" resultType="long">
		select count(org.id) 
		from sys_organization org 
		join sys_organization_type orgt on org.org_type_id = orgt.id
	</select>
	
	<select id="findPageListByQueryMapWithPage" resultType="com.lay.shop.modules.sys.command.OrganizationCommand">
		select org.id as id,org.code as code,org.name as name,org.full_name as fullName,org.lifecycle as lifecycle,orgt.name as orgTypeName 
		from sys_organization org 
		join sys_organization_type orgt on org.org_type_id = orgt.id
	</select>
	
	<select id="findOrganizationById" resultType="com.lay.shop.modules.sys.command.OrganizationCommand">
		select org.id as id,org.code as code,org.name as name,org.full_name as fullName,org.lifecycle as lifecycle,orgt.id as orgTypeId,orgt.name as orgTypeName 
		from sys_organization org 
		join sys_organization_type orgt on org.org_type_id = orgt.id
		where org.id = #{id}
	</select>
	
	<select id="findOrganizationByUserId" resultType="com.lay.shop.modules.sys.command.OrganizationCommand">
		select so.id as id,so.code as code,so.name as name,sot.id as orgTypeId,sot.name as orgTypeName
		from sys_user u 
		join sys_user_org sur on u.id = sur.user_id 
		join sys_organization so on sur.org_id = so.id and so.lifecycle = 1
		join sys_organization_type sot on sot.id = so.org_type_id
		where u.id = #{userId}
	</select>
</mapper>
